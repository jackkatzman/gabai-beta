name: 🔧 Manual Gradle APK Build
on:
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable debug logging'
        required: false
        default: 'false'
        type: boolean

jobs:
  manual-gradle-build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 35
        build-tools: 35.0.0
        ndk-version: 21.4.7075529

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Manual Android Project Creation
      run: |
        echo "🚀 Creating manual Android project..."
        
        # Create isolated build directory
        mkdir -p /tmp/manual-gradle-build
        cd /tmp/manual-gradle-build
        
        # Copy source files
        cp -r $GITHUB_WORKSPACE/client/dist ./www 2>/dev/null || echo "No dist folder, will build"
        cp -r $GITHUB_WORKSPACE/client/src ./src 2>/dev/null || echo "No src folder"
        cp -r $GITHUB_WORKSPACE/client/public ./public 2>/dev/null || echo "No public folder"
        
        # Install dependencies and build if needed
        if [ ! -d "./www" ]; then
          echo "Building frontend..."
          cp -r $GITHUB_WORKSPACE/* .
          npm ci --production
          npm run build
          mv dist www
        fi
        
        # Create basic Android Studio project structure
        mkdir -p app/src/main/{java/com/gabai/app,res/{drawable,layout,values},assets/www}
        
        # Copy web assets
        cp -r www/* app/src/main/assets/www/
        
        echo "📱 Created Android project structure"

    - name: Generate Android Manifest
      run: |
        cd /tmp/manual-gradle-build
        
        cat > app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:tools="http://schemas.android.com/tools"
            package="com.gabai.app">
        
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            <uses-permission android:name="android.permission.RECORD_AUDIO" />
            <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
            <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" 
                             android:maxSdkVersion="32" />
        
            <application
                android:allowBackup="true"
                android:icon="@drawable/ic_launcher"
                android:label="GabAi"
                android:theme="@style/Theme.GabAi"
                android:usesCleartextTraffic="true"
                tools:targetApi="35">
                
                <activity
                    android:name=".MainActivity"
                    android:exported="true"
                    android:theme="@style/Theme.GabAi.NoActionBar">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF

    - name: Generate MainActivity
      run: |
        cd /tmp/manual-gradle-build
        
        cat > app/src/main/java/com/gabai/app/MainActivity.java << 'EOF'
        package com.gabai.app;
        
        import android.app.Activity;
        import android.os.Bundle;
        import android.webkit.WebView;
        import android.webkit.WebViewClient;
        import android.webkit.WebSettings;
        
        public class MainActivity extends Activity {
            private WebView webView;
        
            @Override
            protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                setContentView(R.layout.activity_main);
        
                webView = findViewById(R.id.webview);
                WebSettings webSettings = webView.getSettings();
                webSettings.setJavaScriptEnabled(true);
                webSettings.setDomStorageEnabled(true);
                webSettings.setAllowFileAccess(true);
                webSettings.setAllowContentAccess(true);
                webSettings.setAllowFileAccessFromFileURLs(true);
                webSettings.setAllowUniversalAccessFromFileURLs(true);
        
                webView.setWebViewClient(new WebViewClient());
                webView.loadUrl("file:///android_asset/www/index.html");
            }
        
            @Override
            public void onBackPressed() {
                if (webView.canGoBack()) {
                    webView.goBack();
                } else {
                    super.onBackPressed();
                }
            }
        }
        EOF

    - name: Generate Layout and Resources
      run: |
        cd /tmp/manual-gradle-build
        
        # Create main activity layout
        cat > app/src/main/res/layout/activity_main.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
            android:layout_width="match_parent"
            android:layout_height="match_parent">
        
            <WebView
                android:id="@+id/webview"
                android:layout_width="match_parent"
                android:layout_height="match_parent" />
        
        </RelativeLayout>
        EOF
        
        # Create strings.xml
        cat > app/src/main/res/values/strings.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <string name="app_name">GabAi</string>
        </resources>
        EOF

        # Create styles.xml
        cat > app/src/main/res/values/styles.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <style name="Theme.GabAi" parent="android:Theme.Material.Light.DarkActionBar">
                <item name="android:colorPrimary">#6366F1</item>
            </style>
            <style name="Theme.GabAi.NoActionBar">
                <item name="android:windowActionBar">false</item>
                <item name="android:windowNoTitle">true</item>
            </style>
        </resources>
        EOF

        # Create simple launcher icon (XML drawable)
        cat > app/src/main/res/drawable/ic_launcher.xml << 'EOF'
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="48dp"
            android:height="48dp"
            android:viewportWidth="48"
            android:viewportHeight="48">
          <path
              android:fillColor="#6366F1"
              android:pathData="M24,4C35.05,4 44,12.95 44,24C44,35.05 35.05,44 24,44C12.95,44 4,35.05 4,24C4,12.95 12.95,4 24,4Z"/>
          <path
              android:fillColor="#FFFFFF"
              android:pathData="M24,12C29.52,12 34,16.48 34,22C34,27.52 29.52,32 24,32C18.48,32 14,27.52 14,22C14,16.48 18.48,12 24,12Z"/>
        </vector>
        EOF

    - name: Generate Gradle Build Files
      run: |
        cd /tmp/manual-gradle-build
        
        # Create root build.gradle
        cat > build.gradle << 'EOF'
        buildscript {
            repositories {
                google()
                mavenCentral()
            }
            dependencies {
                classpath 'com.android.tools.build:gradle:8.0.2'
            }
        }
        
        allprojects {
            repositories {
                google()
                mavenCentral()
            }
        }
        
        task clean(type: Delete) {
            delete rootProject.buildDir
        }
        EOF

        # Create app/build.gradle
        cat > app/build.gradle << 'EOF'
        plugins {
            id 'com.android.application'
        }
        
        android {
            compileSdkVersion 35
            buildToolsVersion "35.0.0"
        
            defaultConfig {
                applicationId "com.gabai.app"
                minSdkVersion 21
                targetSdkVersion 33
                versionCode 1
                versionName "1.0.0"
            }
        
            buildTypes {
                debug {
                    minifyEnabled false
                    debuggable true
                }
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }
        
        dependencies {
            implementation 'androidx.appcompat:appcompat:1.6.1'
        }
        EOF

        # Create gradle.properties
        cat > gradle.properties << 'EOF'
        org.gradle.jvmargs=-Xmx3072m -Dfile.encoding=UTF-8
        android.useAndroidX=true
        android.enableJetifier=true
        EOF

        # Create settings.gradle
        echo "include ':app'" > settings.gradle
        
        # Create gradle wrapper
        mkdir -p gradle/wrapper
        cat > gradle/wrapper/gradle-wrapper.properties << 'EOF'
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-8.0-all.zip
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper/dists
        EOF

    - name: Build Debug APK
      run: |
        cd /tmp/manual-gradle-build
        
        echo "🔧 Building debug APK with direct Gradle..."
        
        # Use system Gradle instead of wrapper
        gradle assembleDebug --no-daemon --stacktrace --info
        
        # Copy APK to workspace
        if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          cp app/build/outputs/apk/debug/app-debug.apk $GITHUB_WORKSPACE/gabai-manual-debug.apk
          echo "✅ APK build successful!"
          ls -la $GITHUB_WORKSPACE/gabai-manual-debug.apk
        else
          echo "❌ APK not found, checking build outputs..."
          find app/build -name "*.apk" -type f
        fi

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: gabai-manual-apk-debug
        path: gabai-manual-debug.apk
        retention-days: 30

    - name: Build Summary
      if: always()
      run: |
        echo "## 🔧 Manual Gradle Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f "$GITHUB_WORKSPACE/gabai-manual-debug.apk" ]; then
          echo "✅ **Build Status:** SUCCESS" >> $GITHUB_STEP_SUMMARY
          echo "📱 **APK Name:** gabai-manual-debug.apk" >> $GITHUB_STEP_SUMMARY
          echo "🛠️ **Technology:** Pure Gradle + Android Studio" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Compile SDK:** Android 35" >> $GITHUB_STEP_SUMMARY
          echo "🎯 **Target SDK:** Android 33" >> $GITHUB_STEP_SUMMARY
          echo "📱 **Min SDK:** Android 21" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 **Manual build bypassed Cordova completely!**" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Build Status:** FAILED" >> $GITHUB_STEP_SUMMARY
          echo "🔍 Check logs for details" >> $GITHUB_STEP_SUMMARY
        fi