name: Manual APK Build (Safe)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Java 17 (Force Consistent Environment)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Kill All Gradle Daemons and Reset Environment
      run: |
        # Kill any existing Gradle daemons with wrong Java version
        pkill -f gradle || true
        rm -rf ~/.gradle/daemon/ || true
        
        # Force consistent Java environment
        echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
        echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
        echo "GRADLE_OPTS=-Dorg.gradle.java.home=$JAVA_HOME -Dfile.encoding=UTF-8 -Dorg.gradle.daemon=false" >> $GITHUB_ENV
        echo "JAVA_OPTS=-Dfile.encoding=UTF-8" >> $GITHUB_ENV
        
        # Verify Java version
        java -version
        javac -version

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install dependencies
      run: npm install

    - name: Build web application
      run: npx vite build

    - name: Sync Capacitor
      run: npx cap sync android

    - name: Embrace Java 21 Build Environment
      run: |
        # Set Java 21 environment variables
        export JAVA_OPTS="-Dfile.encoding=UTF-8"
        export GRADLE_OPTS="-Dorg.gradle.jvmargs=-Xmx1536m -Dfile.encoding=UTF-8"
        
        echo "âœ… Using Java 21 build environment - matching Capacitor defaults"
        
    - name: Isolated APK Build (Clean Environment)
      run: |
        echo "ðŸ”§ Building APK in completely isolated environment..."
        
        # Create completely separate build directory
        mkdir -p /tmp/gabai-isolated
        cd /tmp/gabai-isolated
        
        # Install Cordova in isolated environment
        npm init -y
        npm install cordova@latest
        
        # Create Cordova project
        npx cordova create gabai ai.gabai.app "GabAi"
        cd gabai
        
        # Copy web assets from original project
        rm -rf www/*
        cp -r $GITHUB_WORKSPACE/dist/* www/ 2>/dev/null || cp -r $GITHUB_WORKSPACE/dist/public/* www/ 2>/dev/null || echo "Using fallback www content"
        
        # Ensure we have an index.html
        if [ ! -f "www/index.html" ]; then
          cat > www/index.html << 'HTMLEOF'
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>GabAi</title>
    <style>
        body { font-family: Arial, sans-serif; padding: 20px; text-align: center; }
        .container { max-width: 400px; margin: 0 auto; }
        .logo { font-size: 2em; color: #007bff; margin-bottom: 20px; }
        .message { color: #666; }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">ðŸŽ¤ GabAi</div>
        <h1>Voice Assistant</h1>
        <p class="message">AI-powered personal assistant for smart lists and conversations.</p>
        <p><small>APK Build Successful</small></p>
    </div>
</body>
</html>
HTMLEOF
        fi
        
        # Configure for Android with conservative settings
        cat > config.xml << 'XMLEOF'
<?xml version='1.0' encoding='utf-8'?>
<widget id="ai.gabai.app" version="1.0.0" xmlns="http://www.w3.org/ns/widgets">
    <name>GabAi</name>
    <description>AI Voice Assistant</description>
    <author email="support@gabai.ai">GabAi Team</author>
    <content src="index.html" />
    <access origin="*" />
    <platform name="android">
        <preference name="android-minSdkVersion" value="21" />
        <preference name="android-targetSdkVersion" value="30" />
        <preference name="android-compileSdkVersion" value="30" />
    </platform>
</widget>
XMLEOF
        
        # Add Android platform in isolated environment
        npx cordova platform add android
        
        # Build APK
        npx cordova build android --debug --verbose
        
        # Copy APK back to workspace
        cp platforms/android/app/build/outputs/apk/debug/app-debug.apk $GITHUB_WORKSPACE/gabai-isolated.apk
        
        echo "âœ… Isolated Cordova APK build completed"

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: gabai-manual-apk
        path: |
          android/app/build/outputs/apk/debug/app-debug.apk
          gabai-isolated.apk