name: Manual APK Build (Safe)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Java 17 (Force Consistent Environment)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Kill All Gradle Daemons and Reset Environment
      run: |
        # Kill any existing Gradle daemons with wrong Java version
        pkill -f gradle || true
        rm -rf ~/.gradle/daemon/ || true
        
        # Force consistent Java environment
        echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
        echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
        echo "GRADLE_OPTS=-Dorg.gradle.java.home=$JAVA_HOME -Dfile.encoding=UTF-8 -Dorg.gradle.daemon=false" >> $GITHUB_ENV
        echo "JAVA_OPTS=-Dfile.encoding=UTF-8" >> $GITHUB_ENV
        
        # Verify Java version
        java -version
        javac -version

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install dependencies
      run: npm install

    - name: Build web application
      run: npx vite build

    - name: Sync Capacitor
      run: npx cap sync android

    - name: Embrace Java 21 Build Environment
      run: |
        # Set Java 21 environment variables
        export JAVA_OPTS="-Dfile.encoding=UTF-8"
        export GRADLE_OPTS="-Dorg.gradle.jvmargs=-Xmx1536m -Dfile.encoding=UTF-8"
        
        echo "âœ… Using Java 21 build environment - matching Capacitor defaults"
        
    - name: Simple Cordova APK Build
      run: |
        echo "ðŸ”§ Building APK using Cordova (simpler, more reliable)..."
        
        # Ensure Cordova is available globally
        npm install -g cordova
        
        # Create basic Cordova project
        cordova create gabai-cordova ai.gabai.app "GabAi"
        cd gabai-cordova
        
        # Copy built web assets to Cordova www
        rm -rf www/*
        cp -r ../dist/* www/ || cp -r ../dist/public/* www/ || echo "Using existing www content"
        
        # Add Android platform
        cordova platform add android
        
        # Update config.xml with proper settings
        cat > config.xml << 'EOF'
<?xml version='1.0' encoding='utf-8'?>
<widget id="ai.gabai.app" version="1.0.0" xmlns="http://www.w3.org/ns/widgets">
    <name>GabAi</name>
    <description>AI-powered voice assistant</description>
    <author email="support@gabai.ai">GabAi Team</author>
    <content src="index.html" />
    <access origin="*" />
    <platform name="android">
        <preference name="android-minSdkVersion" value="23" />
        <preference name="android-targetSdkVersion" value="33" />
        <preference name="android-compileSdkVersion" value="33" />
    </platform>
</widget>
EOF
        
        # Build APK using Cordova (should use standard Android build tools)
        cordova build android --debug
        
        # Copy APK to workspace
        cp platforms/android/app/build/outputs/apk/debug/app-debug.apk ../cordova-gabai.apk
        
        echo "âœ… Cordova APK build completed successfully"

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: gabai-manual-apk
        path: |
          android/app/build/outputs/apk/debug/app-debug.apk
          cordova-gabai.apk